<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title> slot[Z].trigger.model.addblock.wait() </title>
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="Generator" content="Author-it">
<meta name="Keywords" content="">
<link rel="stylesheet" type="text/css" href="16408.css">
<script language="javascript" type="text/javascript" charset="UTF-8" src="dhtml_toc.js"></script>
</head>
<body onload="if (isTOCLoaded()) {expand('116607');expand('18079');highlight('114975')}" text="#000000" link="#0000A0" alink="#008000" vlink="#FF0000"><table class="relatedtopics aboveheading" cellpadding="0" cellspacing="0" border="0">
<tr valign="top">
<td width= "18">
<p class="bodytext"><a href="114974.htm" target="_self"><img id="f125" src="4200a_lc_previous_button.png" class="linkedpngtemplate4200a-nocaption" alt="Previous Icon" height="23" width="74" vspace="0" hspace="0" align="bottom" border="0"></a></p></td>
<td width= "18">
<p class="bodytext"><a href="114957.htm" target="_self"><img id="f124" src="4200a_lc_next_button.png" class="linkedpngtemplate4200a-nocaption" alt="Next Icon" height="23" width="74" vspace="0" hspace="0" align="bottom" border="0"></a></p></td>
</tr>
</table>
<h2 id="t114975" class="heading2-icl">slot[Z].trigger.model.addblock.wait()</h2>
<p class="bodyzero">This function defines a trigger model block that waits for an event before allowing the trigger model to continue.</p>
<table class="tableintopic" width="672" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #D3D3D3">
<tr align="left" valign="top">
<th bgcolor="#191970" style="border:1px solid #D3D3D3;" width="86"><p class="tableheadingwhitetext">Type</p>
</th>
<th bgcolor="#191970" style="border:1px solid #D3D3D3;" width="120"><p class="tableheadingwhitetext">TSP-Link accessible</p>
</th>
<th bgcolor="#E4E4E4" style="border:1px solid #D3D3D3;" width="144"><p class="tableheading"><span class="grayedout">Affected by</span></p>
</th>
<th bgcolor="#E4E4E4" style="border:1px solid #D3D3D3;" width="144"><p class="tableheading"><span class="grayedout">Where saved</span></p>
</th>
<th bgcolor="#E4E4E4" style="border:1px solid #D3D3D3;" width="178"><p class="tableheading"><span class="grayedout">Default value</span></p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #D3D3D3;" width="86"><p class="tablebodytextsmall">Function</p>
</td>
<td style="border:1px solid #D3D3D3;" width="120"><p class="tablebodytextsmall">Yes</p>
</td>
<td style="border:1px solid #D3D3D3;" width="144"><p class="tablebodytextsmall">&nbsp;</p>
</td>
<td style="border:1px solid #D3D3D3;" width="144"><p class="tablebodytextsmall">&nbsp;</p>
</td>
<td style="border:1px solid #D3D3D3;" width="178"><p class="tablebodytextsmall">&nbsp;</p>
</td>
</tr>

</table>
<p class="iclsubheading">Usage</p>
<p class="iclcode"><code class="monospace">slot[</code><span class="monospaceitalic">Z</span><code class="monospace">].trigger.model.addblock.wait(&quot;</code><span class="monospaceitalic">triggerModelName</span><code class="monospace">&quot;, &quot;</code><span class="monospaceitalic">blockName</span><code class="monospace">&quot;, </code><span class="monospaceitalic">event</span><code class="monospace">)</code></p>
<p class="iclcode"><code class="monospace">slot[</code><span class="monospaceitalic">Z</span><code class="monospace">].trigger.model.addblock.wait(&quot;</code><span class="monospaceitalic">triggerModelName</span><code class="monospace">&quot;, &quot;</code><span class="monospaceitalic">blockName</span><code class="monospace">&quot;, </code><span class="monospaceitalic">event</span><code class="monospace">, </code><span class="monospaceitalic">clear</span><code class="monospace">)</code></p>
<p class="iclcode"><code class="monospace">slot[</code><span class="monospaceitalic">Z</span><code class="monospace">].trigger.model.addblock.wait(&quot;</code><span class="monospaceitalic">triggerModelName</span><code class="monospace">&quot;, &quot;</code><span class="monospaceitalic">blockName</span><code class="monospace">&quot;, </code><span class="monospaceitalic">event</span><code class="monospace">, </code><span class="monospaceitalic">clear</span><code class="monospace">, </code><span class="monospaceitalic">logic</span><code class="monospace">)</code></p>
<p class="iclcode"><code class="monospace">slot[</code><span class="monospaceitalic">Z</span><code class="monospace">].trigger.model.addblock.wait(&quot;</code><span class="monospaceitalic">triggerModelName</span><code class="monospace">&quot;, &quot;</code><span class="monospaceitalic">blockName</span><code class="monospace">&quot;, </code><span class="monospaceitalic">event</span><code class="monospace">, </code><span class="monospaceitalic">clear</span><code class="monospace">, </code><span class="monospaceitalic">logic</span><code class="monospace">, </code><span class="monospaceitalic">event</span><code class="monospace">)</code></p>
<p class="iclcode"><code class="monospace">slot[</code><span class="monospaceitalic">Z</span><code class="monospace">].trigger.model.addblock.wait(&quot;</code><span class="monospaceitalic">triggerModelName</span><code class="monospace">&quot;, &quot;</code><span class="monospaceitalic">blockName</span><code class="monospace">&quot;, </code><span class="monospaceitalic">event</span><code class="monospace">, </code><span class="monospaceitalic">clear</span><code class="monospace">, </code><span class="monospaceitalic">logic</span><code class="monospace">, </code><span class="monospaceitalic">event</span><code class="monospace">, </code><span class="monospaceitalic">event</span><code class="monospace">)</code></p>
<p class="iclcode"><code class="monospace">slot[</code><span class="monospaceitalic">Z</span><code class="monospace">].trigger.model.addblock.wait(&quot;</code><span class="monospaceitalic">triggerModelName</span><code class="monospace">&quot;, &quot;</code><span class="monospaceitalic">blockName</span><code class="monospace">&quot;, </code><span class="monospaceitalic">event</span><code class="monospace">, </code><span class="monospaceitalic">clear</span><code class="monospace">, </code><span class="monospaceitalic">logic</span><code class="monospace">, </code><span class="monospaceitalic">event</span><code class="monospace">, </code><span class="monospaceitalic">event</span><code class="monospace">, </code><span class="monospaceitalic">event</span><code class="monospace">)</code></p>
<p class="iclspacing"></p>
<table class="tableintopic" width="600" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #C0C0C0">
<tr align="left" valign="top">
<td style="border:1px solid #C0C0C0;" width="139"><p class="codetable"><span class="monospaceitalic">Z</span></p>
</td>
<td style="border:1px solid #C0C0C0;" width="461"><p class="tablebodytext">Module slot number</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #C0C0C0;" width="139"><p class="codetable"><span class="monospaceitalic">triggerModelName</span></p>
</td>
<td style="border:1px solid #C0C0C0;" width="461"><p class="tablebodytext">Name of the trigger model to which the block will be added</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #C0C0C0;" width="139"><p class="codetable"><span class="monospaceitalic">blockName</span></p>
</td>
<td style="border:1px solid #C0C0C0;" width="461"><p class="tablebodytext">Name of the trigger block being added by this command</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #C0C0C0;" width="139"><p class="codetable"><span class="monospaceitalic">event</span></p>
</td>
<td style="border:1px solid #C0C0C0;" width="461"><p class="tablebodytext">The event that must occur before the trigger block allows trigger execution to continue (see <strong class="specialbold">Details</strong>)</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #C0C0C0;" width="139"><p class="codetable"><span class="monospaceitalic">clear</span></p>
</td>
<td style="border:1px solid #C0C0C0;" width="461"><p class="tablebodytext">To clear previously detected trigger events when entering the wait block:</p>
<p class="tablebodytext"><code class="monospace">trigger.CLEAR_ENTER</code></p>
<p class="tablebodytext">To immediately act on any previously detected triggers and not clear them (default):</p>
<p class="tablebodytext"><code class="monospace">trigger.CLEAR_NEVER</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #C0C0C0;" width="139"><p class="codetable"><span class="monospaceitalic">logic</span></p>
</td>
<td style="border:1px solid #C0C0C0;" width="461"><p class="tablebodytext">If each event must occur before the trigger model continues: <code class="monospace">trigger.WAIT_AND</code></p>
<p class="tablebodytext">If at least one of the events must occur before the trigger model continues:</p>
<p class="tablebodytext"><code class="monospace">trigger.WAIT_OR</code></p>
</td>
</tr>

</table>
<p class="iclsubheading">Details</p>
<p class="iclbody">You can use this command to synchronize measurements with other instruments and devices. You can set the instrument to wait for the following events:</p>
<ul class="listbullet"><li class="listbullet">Notify</li><li class="listbullet">Command interface trigger</li><li class="listbullet">Digital input/output signals, such as DIGIO and TSP-Link</li></ul><p class="iclbody">The event can occur before trigger model execution reaches the wait block. If the event occurs after trigger model execution starts but before the trigger model execution reaches the wait block, the trigger model records the event.</p>
<p class="iclbody">By default, when trigger model execution reaches the wait block, it executes the wait block without waiting for the event to occur again when the clear parameter is set to never. </p>
<p class="iclbody">The instrument clears the memory of the recorded event when trigger model execution is at the start block and when the trigger model exits the wait block. It also clears the recorded trigger event when the clear parameter is set to enter.</p>
<p class="iclsubheading">Example</p>
<p class="iclspacing"></p>
<table class="tableintopic" width="600" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td bgcolor="#E0E0E0" style="border:1px solid #D3D3D3;" width="600"><p class="codetable">SLOT = 1</p>
<p class="codetable">SMU1 = slot[SLOT].smu[1]</p>
<p class="codetable">SMU2 = slot[SLOT].smu[2]</p>
<p class="codetable">SMU1.source.levelv = 4.2 ; SMU2.source.levelv = 5.3</p>
<p class="codetable">SMU1.source.output = 0 ; SMU2.source.output = 0</p>
<p class="codetable">EVENT = slot[SLOT].trigger.model.EVENT_NOTIFY1</p>
<p class="codetable">TM = slot[SLOT].trigger.model</p>
<p class="codetable">TM.delete(&quot;waitCH1&quot;) ; TM.delete(&quot;notifyCH2&quot;)</p>
<p class="codetable">TM.create(&quot;waitCH1&quot;) ; TM.create(&quot;notifyCH2&quot;)</p>
<p class="codetable">TM.addblock.wait(&quot;waitCH1&quot;, &quot;wait1&quot;, EVENT)</p>
<p class="codetable">TM.addblock.source.output(&quot;waitCH1&quot;, &quot;sourceoutput2&quot;, 1, 1)</p>
<p class="codetable">TM.addblock.delay.constant(&quot;waitCH1&quot;, &quot;delay2&quot;, 0.01)</p>
<p class="codetable">TM.addblock.source.output(&quot;waitCH1&quot;, &quot;sourceoutput3&quot;, 1, 0)</p>
<p class="codetable">TM.addblock.source.output(&quot;notifyCH2&quot;, &quot;sourceoutput1&quot;, 2, 1)</p>
<p class="codetable">TM.addblock.notify(&quot;notifyCH2&quot;, &quot;notify2&quot;, EVENT)</p>
<p class="codetable">TM.addblock.delay.constant(&quot;notifyCH2&quot;, &quot;delay3&quot;, 0.01)</p>
<p class="codetable">TM.addblock.source.output(&quot;notifyCH2&quot;, &quot;sourceoutput3&quot;, 2, 0)</p>
<p class="codetable">TM.print(&quot;notifyCH2&quot;) ; TM.print(&quot;waitCH1&quot;)</p>
<p class="codetable">&nbsp;</p>
<p class="codetable">TM.initiate(&quot;waitCH1&quot;) ; TM.initiate(&quot;notifyCH2&quot;)</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #D3D3D3;" width="600"><p class="tablebodytext">This example demonstrates a trigger model that uses 2 channels to create a wait and notify pair. The wait trigger model is initiated first and when the notify trigger model reaches the notify block, the outputs of both channels will pulse high for 10 ms.</p>
<p class="tablebodytext">Note the assignment of the SLOT variable and change it accordingly.</p>
</td>
</tr>

</table>
<p class="iclsubheading">Also see</p>
<p class="listcommand">None</p>

</body>
</html>
