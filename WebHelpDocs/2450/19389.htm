<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title> TSP commands </title>
<link rel="stylesheet" type="text/css" href="stylesheet.css" /> 
<script type="text/javascript">
        function isTOCLoaded() {
            //this function for loading the topic within the application if loaded by itself
            //i.e. open the topic .htm file or as search engines link
            var url = window.location.href;
            var baseUrl = url.substring(0, url.lastIndexOf("/") + 1);
            var topicFile = url.substring(url.lastIndexOf("/") + 1)
            var newUrl = baseUrl + "index.htm#" + topicFile;
            location.href = newUrl;
            return false;
        }
</script>
</head>
<body>
<table class="relatedtopics aboveheading" cellpadding="0" cellspacing="0" border="0">
<tr valign="top">
<td width= "18">
<p class="bodytext"><a href="17857.htm" target="_self"><img id="f125" src="4200a_lc_previous_button.png" class="linkedpngtemplate4200a-nocaption" alt="Previous Icon" height="23" width="74" vspace="0" hspace="0" align="bottom" border="0"></a></p></td>
<td width= "18">
<p class="bodytext"><a href="89066.htm" target="_self"><img id="f124" src="4200a_lc_next_button.png" class="linkedpngtemplate4200a-nocaption" alt="Next Icon" height="23" width="74" vspace="0" hspace="0" align="bottom" border="0"></a></p></td>
</tr>
</table>
<h3 id="t19389" class="heading3">TSP commands</h3>
<p class="bodytext">The TSP commands available for the instrument are listed in alphabetic order.</p>
<table class="relatedtopics belowtopictext" cellpadding="0" cellspacing="0" border="0">
<tr valign="top">
<td width= "227">
<p class="relatedheading">In This Section</p><p class="relateditem"><a href="89066.htm" target="_self">available()</a></p><p class="relateditem"><a href="29636.htm" target="_self">beeper.beep()</a></p><p class="relateditem"><a href="34560.htm" target="_self">buffer.clearstats()</a></p><p class="relateditem"><a href="33981.htm" target="_self">buffer.delete()</a></p><p class="relateditem"><a href="25624.htm" target="_self">buffer.getstats()</a></p><p class="relateditem"><a href="25629.htm" target="_self">buffer.make()</a></p><p class="relateditem"><a href="73595.htm" target="_self">buffer.math()</a></p><p class="relateditem"><a href="85101.htm" target="_self">buffer.save()</a></p><p class="relateditem"><a href="25642.htm" target="_self">buffer.saveappend()</a></p><p class="relateditem"><a href="76401.htm" target="_self">buffer.unit()</a></p><p class="relateditem"><a href="25706.htm" target="_self">bufferVar.capacity</a></p><p class="relateditem"><a href="30485.htm" target="_self">bufferVar.clear()</a></p><p class="relateditem"><a href="30488.htm" target="_self">bufferVar.dates</a></p><p class="relateditem"><a href="56794.htm" target="_self">bufferVar.endindex</a></p><p class="relateditem"><a href="81089.htm" target="_self">bufferVar.extraformattedvalues</a></p><p class="relateditem"><a href="46323.htm" target="_self">bufferVar.extravalues</a></p><p class="relateditem"><a href="81090.htm" target="_self">bufferVar.extravalueunits</a></p><p class="relateditem"><a href="30489.htm" target="_self">bufferVar.fillmode</a></p><p class="relateditem"><a href="25640.htm" target="_self">bufferVar.formattedreadings</a></p><p class="relateditem"><a href="30542.htm" target="_self">bufferVar.fractionalseconds</a></p><p class="relateditem"><a href="30577.htm" target="_self">bufferVar.logstate</a></p><p class="relateditem"><a href="25630.htm" target="_self">bufferVar.n</a></p><p class="relateditem"><a href="30545.htm" target="_self">bufferVar.readings</a></p><p class="relateditem"><a href="25712.htm" target="_self">bufferVar.relativetimestamps</a></p><p class="relateditem"><a href="25713.htm" target="_self">bufferVar.seconds</a></p><p class="relateditem"><a href="30538.htm" target="_self">bufferVar.sourceformattedvalues</a></p><p class="relateditem"><a href="34340.htm" target="_self">bufferVar.sourcestatuses</a></p><p class="relateditem"><a href="25707.htm" target="_self">bufferVar.sourceunits</a></p><p class="relateditem"><a href="30550.htm" target="_self">bufferVar.sourcevalues</a></p><p class="relateditem"><a href="56793.htm" target="_self">bufferVar.startindex</a></p><p class="relateditem"><a href="33164.htm" target="_self">bufferVar.statuses</a></p><p class="relateditem"><a href="25715.htm" target="_self">bufferVar.times</a></p><p class="relateditem"><a href="25716.htm" target="_self">bufferVar.timestamps</a></p><p class="relateditem"><a href="25641.htm" target="_self">bufferVar.units</a></p><p class="relateditem"><a href="46427.htm" target="_self">buffer.write.format()</a></p><p class="relateditem"><a href="46428.htm" target="_self">buffer.write.reading()</a></p><p class="relateditem"><a href="34589.htm" target="_self">createconfigscript()</a></p><p class="relateditem"><a href="14654.htm" target="_self">dataqueue.add()</a></p><p class="relateditem"><a href="14656.htm" target="_self">dataqueue.CAPACITY</a></p><p class="relateditem"><a href="14655.htm" target="_self">dataqueue.clear()</a></p><p class="relateditem"><a href="14657.htm" target="_self">dataqueue.count</a></p><p class="relateditem"><a href="14658.htm" target="_self">dataqueue.next()</a></p><p class="relateditem"><a href="13949.htm" target="_self">delay()</a></p><p class="relateditem"><a href="31363.htm" target="_self">digio.line[N].mode</a></p><p class="relateditem"><a href="31393.htm" target="_self">digio.line[N].reset()</a></p><p class="relateditem"><a href="30982.htm" target="_self">digio.line[N].state</a></p><p class="relateditem"><a href="31368.htm" target="_self">digio.readport()</a></p><p class="relateditem"><a href="30981.htm" target="_self">digio.writeport()</a></p><p class="relateditem"><a href="81840.htm" target="_self">display.activebuffer</a></p><p class="relateditem"><a href="30503.htm" target="_self">display.changescreen()</a></p><p class="relateditem"><a href="30502.htm" target="_self">display.clear()</a></p><p class="relateditem"><a href="38977.htm" target="_self">display.delete()</a></p><p class="relateditem"><a href="40051.htm" target="_self">display.input.number()</a></p><p class="relateditem"><a href="40052.htm" target="_self">display.input.option()</a></p><p class="relateditem"><a href="40053.htm" target="_self">display.input.prompt()</a></p><p class="relateditem"><a href="40054.htm" target="_self">display.input.string()</a></p><p class="relateditem"><a href="33459.htm" target="_self">display.lightstate</a></p><p class="relateditem"><a href="33260.htm" target="_self">display.prompt()</a></p><p class="relateditem"><a href="25719.htm" target="_self">display.readingformat</a></p><p class="relateditem"><a href="25722.htm" target="_self">display.settext()</a></p><p class="relateditem"><a href="33261.htm" target="_self">display.waitevent()</a></p><p class="relateditem"><a href="27637.htm" target="_self">eventlog.clear()</a></p><p class="relateditem"><a href="30552.htm" target="_self">eventlog.getcount()</a></p><p class="relateditem"><a href="27658.htm" target="_self">eventlog.next()</a></p><p class="relateditem"><a href="34730.htm" target="_self">eventlog.post()</a></p><p class="relateditem"><a href="25702.htm" target="_self">eventlog.save()</a></p><p class="relateditem"><a href="14769.htm" target="_self">exit()</a></p><p class="relateditem"><a href="27930.htm" target="_self">file.close()</a></p><p class="relateditem"><a href="27958.htm" target="_self">file.flush()</a></p><p class="relateditem"><a href="25723.htm" target="_self">file.mkdir()</a></p><p class="relateditem"><a href="25724.htm" target="_self">file.open()</a></p><p class="relateditem"><a href="27929.htm" target="_self">file.read()</a></p><p class="relateditem"><a href="34905.htm" target="_self">file.usbdriveexists()</a></p><p class="relateditem"><a href="27934.htm" target="_self">file.write()</a></p><p class="relateditem"><a href="28056.htm" target="_self">format.asciiprecision</a></p><p class="relateditem"><a href="28048.htm" target="_self">format.byteorder</a></p><p class="relateditem"><a href="28063.htm" target="_self">format.data</a></p><p class="relateditem"><a href="14808.htm" target="_self">fs.chdir()</a></p><p class="relateditem"><a href="14810.htm" target="_self">fs.cwd()</a></p><p class="relateditem"><a href="14811.htm" target="_self">fs.is_dir()</a></p><p class="relateditem"><a href="14824.htm" target="_self">fs.is_file()</a></p><p class="relateditem"><a href="14812.htm" target="_self">fs.mkdir()</a></p><p class="relateditem"><a href="14814.htm" target="_self">fs.readdir()</a></p><p class="relateditem"><a href="14815.htm" target="_self">fs.rmdir()</a></p><p class="relateditem"><a href="14860.htm" target="_self">gpib.address</a></p><p class="relateditem"><a href="25725.htm" target="_self">lan.ipconfig()</a></p><p class="relateditem"><a href="14893.htm" target="_self">lan.lxidomain</a></p><p class="relateditem"><a href="28423.htm" target="_self">lan.macaddress</a></p><p class="relateditem"><a href="33140.htm" target="_self">localnode.access</a></p><p class="relateditem"><a href="32416.htm" target="_self">localnode.gettime()</a></p><p class="relateditem"><a href="32628.htm" target="_self">localnode.linefreq</a></p><p class="relateditem"><a href="15013.htm" target="_self">localnode.model</a></p><p class="relateditem"><a href="34629.htm" target="_self">localnode.password</a></p><p class="relateditem"><a href="33148.htm" target="_self">localnode.prompts</a></p><p class="relateditem"><a href="40235.htm" target="_self">localnode.prompts4882</a></p><p class="relateditem"><a href="32597.htm" target="_self">localnode.serialno</a></p><p class="relateditem"><a href="25726.htm" target="_self">localnode.settime()</a></p><p class="relateditem"><a href="30504.htm" target="_self">localnode.showevents</a></p><p class="relateditem"><a href="32595.htm" target="_self">localnode.version</a></p><p class="relateditem"><a href="15009.htm" target="_self">node[N].execute()</a></p><p class="relateditem"><a href="15010.htm" target="_self">node[N].getglobal()</a></p><p class="relateditem"><a href="15020.htm" target="_self">node[N].setglobal()</a></p><p class="relateditem"><a href="29846.htm" target="_self">opc()</a></p><p class="relateditem"><a href="17645.htm" target="_self">print()</a></p><p class="relateditem"><a href="15057.htm" target="_self">printbuffer()</a></p><p class="relateditem"><a href="15058.htm" target="_self">printnumber()</a></p><p class="relateditem"><a href="34054.htm" target="_self">reset()</a></p><p class="relateditem"><a href="33290.htm" target="_self">script.catalog()</a></p><p class="relateditem"><a href="33394.htm" target="_self">script.delete()</a></p><p class="relateditem"><a href="33286.htm" target="_self">script.load()</a></p><p class="relateditem"><a href="16856.htm" target="_self">scriptVar.run()</a></p><p class="relateditem"><a href="16863.htm" target="_self">scriptVar.save()</a></p><p class="relateditem"><a href="33395.htm" target="_self">scriptVar.source</a></p><p class="relateditem"><a href="88873.htm" target="_self">smu.interlock.enable</a></p><p class="relateditem"><a href="25729.htm" target="_self">smu.interlock.tripped</a></p><p class="relateditem"><a href="29393.htm" target="_self">smu.measure.autorange</a></p><p class="relateditem"><a href="29432.htm" target="_self">smu.measure.autorangehigh</a></p><p class="relateditem"><a href="29423.htm" target="_self">smu.measure.autorangelow</a></p><p class="relateditem"><a href="88860.htm" target="_self">smu.measure.autorangerebound</a></p><p class="relateditem"><a href="29048.htm" target="_self">smu.measure.autozero.enable</a></p><p class="relateditem"><a href="29049.htm" target="_self">smu.measure.autozero.once()</a></p><p class="relateditem"><a href="28417.htm" target="_self">smu.measure.configlist.catalog()</a></p><p class="relateditem"><a href="25691.htm" target="_self">smu.measure.configlist.create()</a></p><p class="relateditem"><a href="28421.htm" target="_self">smu.measure.configlist.delete()</a></p><p class="relateditem"><a href="28418.htm" target="_self">smu.measure.configlist.query()</a></p><p class="relateditem"><a href="28419.htm" target="_self">smu.measure.configlist.recall()</a></p><p class="relateditem"><a href="32926.htm" target="_self">smu.measure.configlist.size()</a></p><p class="relateditem"><a href="30559.htm" target="_self">smu.measure.configlist.store()</a></p><p class="relateditem"><a href="91273.htm" target="_self">smu.measure.configlist.storefunc()</a></p><p class="relateditem"><a href="30505.htm" target="_self">smu.measure.count</a></p><p class="relateditem"><a href="28416.htm" target="_self">smu.measure.displaydigits</a></p><p class="relateditem"><a href="30064.htm" target="_self">smu.measure.filter.count</a></p><p class="relateditem"><a href="30066.htm" target="_self">smu.measure.filter.enable</a></p><p class="relateditem"><a href="30065.htm" target="_self">smu.measure.filter.type</a></p><p class="relateditem"><a href="25622.htm" target="_self">smu.measure.func</a></p><p class="relateditem"><a href="91266.htm" target="_self">smu.measure.getattribute()</a></p><p class="relateditem"><a href="41684.htm" target="_self">smu.measure.limit[Y].audible</a></p><p class="relateditem"><a href="25682.htm" target="_self">smu.measure.limit[Y].autoclear</a></p><p class="relateditem"><a href="25683.htm" target="_self">smu.measure.limit[Y].clear()</a></p><p class="relateditem"><a href="29884.htm" target="_self">smu.measure.limit[Y].enable</a></p><p class="relateditem"><a href="25684.htm" target="_self">smu.measure.limit[Y].fail</a></p><p class="relateditem"><a href="25685.htm" target="_self">smu.measure.limit[Y].high.value</a></p><p class="relateditem"><a href="25686.htm" target="_self">smu.measure.limit[Y].low.value</a></p><p class="relateditem"><a href="25644.htm" target="_self">smu.measure.math.enable</a></p><p class="relateditem"><a href="25687.htm" target="_self">smu.measure.math.format</a></p><p class="relateditem"><a href="30107.htm" target="_self">smu.measure.math.mxb.bfactor</a></p><p class="relateditem"><a href="30108.htm" target="_self">smu.measure.math.mxb.mfactor</a></p><p class="relateditem"><a href="30109.htm" target="_self">smu.measure.math.percent</a></p><p class="relateditem"><a href="29064.htm" target="_self">smu.measure.nplc</a></p><p class="relateditem"><a href="29137.htm" target="_self">smu.measure.offsetcompensation</a></p><p class="relateditem"><a href="29407.htm" target="_self">smu.measure.range</a></p><p class="relateditem"><a href="25688.htm" target="_self">smu.measure.read()</a></p><p class="relateditem"><a href="31457.htm" target="_self">smu.measure.readwithtime()</a></p><p class="relateditem"><a href="25645.htm" target="_self">smu.measure.rel.acquire()</a></p><p class="relateditem"><a href="29986.htm" target="_self">smu.measure.rel.enable</a></p><p class="relateditem"><a href="29987.htm" target="_self">smu.measure.rel.level</a></p><p class="relateditem"><a href="25730.htm" target="_self">smu.measure.sense</a></p><p class="relateditem"><a href="91445.htm" target="_self">smu.measure.setattribute()</a></p><p class="relateditem"><a href="30560.htm" target="_self">smu.measure.unit</a></p><p class="relateditem"><a href="31441.htm" target="_self">smu.measure.userdelay[N]</a></p><p class="relateditem"><a href="30521.htm" target="_self">smu.reset()</a></p><p class="relateditem"><a href="29386.htm" target="_self">smu.source.autorange</a></p><p class="relateditem"><a href="33143.htm" target="_self">smu.source.autodelay</a></p><p class="relateditem"><a href="25695.htm" target="_self">smu.source.configlist.catalog()</a></p><p class="relateditem"><a href="25696.htm" target="_self">smu.source.configlist.create()</a></p><p class="relateditem"><a href="25697.htm" target="_self">smu.source.configlist.delete()</a></p><p class="relateditem"><a href="25698.htm" target="_self">smu.source.configlist.query()</a></p><p class="relateditem"><a href="33155.htm" target="_self">smu.source.configlist.recall()</a></p><p class="relateditem"><a href="25700.htm" target="_self">smu.source.configlist.size()</a></p><p class="relateditem"><a href="25693.htm" target="_self">smu.source.configlist.store()</a></p><p class="relateditem"><a href="91274.htm" target="_self">smu.source.configlist.storefunc()</a></p><p class="relateditem"><a href="29079.htm" target="_self">smu.source.delay</a></p><p class="relateditem"><a href="29382.htm" target="_self">smu.source.func</a></p><p class="relateditem"><a href="91276.htm" target="_self">smu.source.getattribute()</a></p><p class="relateditem"><a href="30580.htm" target="_self">smu.source.highc</a></p><p class="relateditem"><a href="29907.htm" target="_self">smu.source.level</a></p><p class="relateditem"><a href="29238.htm" target="_self">smu.source.offmode</a></p><p class="relateditem"><a href="28022.htm" target="_self">smu.source.output</a></p><p class="relateditem"><a href="29072.htm" target="_self">smu.source.protect.level</a></p><p class="relateditem"><a href="30235.htm" target="_self">smu.source.protect.tripped</a></p><p class="relateditem"><a href="29383.htm" target="_self">smu.source.range</a></p><p class="relateditem"><a href="30579.htm" target="_self">smu.source.readback</a></p><p class="relateditem"><a href="91275.htm" target="_self">smu.source.setattribute()</a></p><p class="relateditem"><a href="30563.htm" target="_self">smu.source.sweeplinear()</a></p><p class="relateditem"><a href="30565.htm" target="_self">smu.source.sweeplinearstep()</a></p><p class="relateditem"><a href="31499.htm" target="_self">smu.source.sweeplist()</a></p><p class="relateditem"><a href="30566.htm" target="_self">smu.source.sweeplog()</a></p><p class="relateditem"><a href="34973.htm" target="_self">smu.source.userdelay[N]</a></p><p class="relateditem"><a href="30561.htm" target="_self">smu.source.xlimit.level</a></p><p class="relateditem"><a href="30562.htm" target="_self">smu.source.xlimit.tripped</a></p><p class="relateditem"><a href="25737.htm" target="_self">smu.terminals</a></p><p class="relateditem"><a href="30567.htm" target="_self">status.clear()</a></p><p class="relateditem"><a href="31635.htm" target="_self">status.condition</a></p><p class="relateditem"><a href="31639.htm" target="_self">status.operation.condition</a></p><p class="relateditem"><a href="31637.htm" target="_self">status.operation.enable</a></p><p class="relateditem"><a href="31638.htm" target="_self">status.operation.event</a></p><p class="relateditem"><a href="30523.htm" target="_self">status.operation.getmap()</a></p><p class="relateditem"><a href="31648.htm" target="_self">status.operation.setmap()</a></p><p class="relateditem"><a href="33635.htm" target="_self">status.preset()</a></p><p class="relateditem"><a href="31614.htm" target="_self">status.questionable.condition</a></p><p class="relateditem"><a href="31615.htm" target="_self">status.questionable.enable</a></p><p class="relateditem"><a href="30524.htm" target="_self">status.questionable.event</a></p><p class="relateditem"><a href="31613.htm" target="_self">status.questionable.getmap()</a></p><p class="relateditem"><a href="31612.htm" target="_self">status.questionable.setmap()</a></p><p class="relateditem"><a href="32386.htm" target="_self">status.request_enable</a></p><p class="relateditem"><a href="30525.htm" target="_self">status.standard.enable</a></p><p class="relateditem"><a href="31653.htm" target="_self">status.standard.event</a></p><p class="relateditem"><a href="25636.htm" target="_self">timer.cleartime()</a></p><p class="relateditem"><a href="25635.htm" target="_self">timer.gettime()</a></p><p class="relateditem"><a href="15785.htm" target="_self">trigger.blender[N].clear()</a></p><p class="relateditem"><a href="15787.htm" target="_self">trigger.blender[N].orenable</a></p><p class="relateditem"><a href="15788.htm" target="_self">trigger.blender[N].overrun</a></p><p class="relateditem"><a href="17666.htm" target="_self">trigger.blender[N].reset()</a></p><p class="relateditem"><a href="34428.htm" target="_self">trigger.blender[N].stimulus[M]</a></p><p class="relateditem"><a href="35118.htm" target="_self">trigger.blender[N].wait()</a></p><p class="relateditem"><a href="25637.htm" target="_self">trigger.clear()</a></p><p class="relateditem"><a href="88463.htm" target="_self">trigger.continuous</a></p><p class="relateditem"><a href="31373.htm" target="_self">trigger.digin[N].clear()</a></p><p class="relateditem"><a href="31360.htm" target="_self">trigger.digin[N].edge</a></p><p class="relateditem"><a href="31378.htm" target="_self">trigger.digin[N].overrun</a></p><p class="relateditem"><a href="31394.htm" target="_self">trigger.digin[N].wait()</a></p><p class="relateditem"><a href="31392.htm" target="_self">trigger.digout[N].assert()</a></p><p class="relateditem"><a href="33159.htm" target="_self">trigger.digout[N].logic</a></p><p class="relateditem"><a href="31385.htm" target="_self">trigger.digout[N].pulsewidth</a></p><p class="relateditem"><a href="31395.htm" target="_self">trigger.digout[N].release()</a></p><p class="relateditem"><a href="30501.htm" target="_self">trigger.digout[N].stimulus</a></p><p class="relateditem"><a href="31398.htm" target="_self">trigger.lanin[N].clear()</a></p><p class="relateditem"><a href="28111.htm" target="_self">trigger.lanin[N].edge</a></p><p class="relateditem"><a href="31413.htm" target="_self">trigger.lanin[N].overrun</a></p><p class="relateditem"><a href="31397.htm" target="_self">trigger.lanin[N].wait()</a></p><p class="relateditem"><a href="31396.htm" target="_self">trigger.lanout[N].assert()</a></p><p class="relateditem"><a href="31401.htm" target="_self">trigger.lanout[N].connect()</a></p><p class="relateditem"><a href="31406.htm" target="_self">trigger.lanout[N].connected</a></p><p class="relateditem"><a href="31404.htm" target="_self">trigger.lanout[N].disconnect()</a></p><p class="relateditem"><a href="31409.htm" target="_self">trigger.lanout[N].ipaddress</a></p><p class="relateditem"><a href="33157.htm" target="_self">trigger.lanout[N].logic</a></p><p class="relateditem"><a href="31416.htm" target="_self">trigger.lanout[N].protocol</a></p><p class="relateditem"><a href="31419.htm" target="_self">trigger.lanout[N].stimulus</a></p><p class="relateditem"><a href="25628.htm" target="_self">trigger.model.abort()</a></p><p class="relateditem"><a href="30569.htm" target="_self">trigger.model.getblocklist()</a></p><p class="relateditem"><a href="30570.htm" target="_self">trigger.model.getbranchcount()</a></p><p class="relateditem"><a href="30571.htm" target="_self">trigger.model.initiate()</a></p><p class="relateditem"><a href="35126.htm" target="_self">trigger.model.load() - ConfigList</a></p><p class="relateditem"><a href="30588.htm" target="_self">trigger.model.load() - DurationLoop</a></p><p class="relateditem"><a href="35127.htm" target="_self">trigger.model.load() - Empty</a></p><p class="relateditem"><a href="46058.htm" target="_self">trigger.model.load() - GradeBinning</a></p><p class="relateditem"><a href="35128.htm" target="_self">trigger.model.load() - LogicTrigger</a></p><p class="relateditem"><a href="46040.htm" target="_self">trigger.model.load() - LoopUntilEvent</a></p><p class="relateditem"><a href="46034.htm" target="_self">trigger.model.load() - SimpleLoop</a></p><p class="relateditem"><a href="46066.htm" target="_self">trigger.model.load() - SortBinning</a></p><p class="relateditem"><a href="72471.htm" target="_self">trigger.model.pause()</a></p><p class="relateditem"><a href="73512.htm" target="_self">trigger.model.resume()</a></p><p class="relateditem"><a href="31112.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_BRANCH_ALWAYS</a></p><p class="relateditem"><a href="31103.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_BRANCH_COUNTER</a></p><p class="relateditem"><a href="31107.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_BRANCH_DELTA</a></p><p class="relateditem"><a href="31105.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_BRANCH_LIMIT_CONSTANT</a></p><p class="relateditem"><a href="31114.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_BRANCH_LIMIT_DYNAMIC</a></p><p class="relateditem"><a href="31104.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_BRANCH_ON_EVENT</a></p><p class="relateditem"><a href="31108.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_BRANCH_ONCE</a></p><p class="relateditem"><a href="31109.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_BRANCH_ONCE_EXCLUDED</a></p><p class="relateditem"><a href="30574.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_BUFFER_CLEAR</a></p><p class="relateditem"><a href="31097.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_CONFIG_NEXT</a></p><p class="relateditem"><a href="31098.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_CONFIG_PREV</a></p><p class="relateditem"><a href="31096.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_CONFIG_RECALL</a></p><p class="relateditem"><a href="31347.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_DELAY_CONSTANT</a></p><p class="relateditem"><a href="31101.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_DELAY_DYNAMIC</a></p><p class="relateditem"><a href="31102.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_DIGITAL_IO</a></p><p class="relateditem"><a href="35428.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_LOG_EVENT</a></p><p class="relateditem"><a href="31094.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_MEASURE_DIGITIZE</a></p><p class="relateditem"><a href="35431.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_NOP</a></p><p class="relateditem"><a href="31110.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_NOTIFY</a></p><p class="relateditem"><a href="41689.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_RESET_BRANCH_COUNT</a></p><p class="relateditem"><a href="31095.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_SOURCE_OUTPUT</a></p><p class="relateditem"><a href="31093.htm" target="_self">trigger.model.setblock() - trigger.BLOCK_WAIT</a></p><p class="relateditem"><a href="25741.htm" target="_self">trigger.model.state()</a></p><p class="relateditem"><a href="15793.htm" target="_self">trigger.timer[N].clear()</a></p><p class="relateditem"><a href="15820.htm" target="_self">trigger.timer[N].count</a></p><p class="relateditem"><a href="15794.htm" target="_self">trigger.timer[N].delay</a></p><p class="relateditem"><a href="15795.htm" target="_self">trigger.timer[N].delaylist</a></p><p class="relateditem"><a href="30576.htm" target="_self">trigger.timer[N].enable</a></p><p class="relateditem"><a href="31076.htm" target="_self">trigger.timer[N].reset()</a></p><p class="relateditem"><a href="33985.htm" target="_self">trigger.timer[N].start.fractionalseconds</a></p><p class="relateditem"><a href="30536.htm" target="_self">trigger.timer[N].start.generate</a></p><p class="relateditem"><a href="30553.htm" target="_self">trigger.timer[N].start.overrun</a></p><p class="relateditem"><a href="33984.htm" target="_self">trigger.timer[N].start.seconds</a></p><p class="relateditem"><a href="30555.htm" target="_self">trigger.timer[N].start.stimulus</a></p><p class="relateditem"><a href="15800.htm" target="_self">trigger.timer[N].wait()</a></p><p class="relateditem"><a href="32551.htm" target="_self">trigger.tsplinkin[N].clear()</a></p><p class="relateditem"><a href="32539.htm" target="_self">trigger.tsplinkin[N].edge</a></p><p class="relateditem"><a href="32552.htm" target="_self">trigger.tsplinkin[N].overrun</a></p><p class="relateditem"><a href="32561.htm" target="_self">trigger.tsplinkin[N].wait()</a></p><p class="relateditem"><a href="32549.htm" target="_self">trigger.tsplinkout[N].assert()</a></p><p class="relateditem"><a href="32540.htm" target="_self">trigger.tsplinkout[N].logic</a></p><p class="relateditem"><a href="32553.htm" target="_self">trigger.tsplinkout[N].pulsewidth</a></p><p class="relateditem"><a href="32555.htm" target="_self">trigger.tsplinkout[N].release()</a></p><p class="relateditem"><a href="32558.htm" target="_self">trigger.tsplinkout[N].stimulus</a></p><p class="relateditem"><a href="25639.htm" target="_self">trigger.wait()</a></p><p class="relateditem"><a href="15285.htm" target="_self">tsplink.group</a></p><p class="relateditem"><a href="30551.htm" target="_self">tsplink.initialize()</a></p><p class="relateditem"><a href="32538.htm" target="_self">tsplink.line[N].mode</a></p><p class="relateditem"><a href="32541.htm" target="_self">tsplink.line[N].reset()</a></p><p class="relateditem"><a href="32542.htm" target="_self">tsplink.line[N].state</a></p><p class="relateditem"><a href="32565.htm" target="_self">tsplink.master</a></p><p class="relateditem"><a href="15287.htm" target="_self">tsplink.node</a></p><p class="relateditem"><a href="15289.htm" target="_self">tsplink.readport()</a></p><p class="relateditem"><a href="15291.htm" target="_self">tsplink.state</a></p><p class="relateditem"><a href="15302.htm" target="_self">tsplink.writeport()</a></p><p class="relateditem"><a href="14073.htm" target="_self">tspnet.clear()</a></p><p class="relateditem"><a href="14074.htm" target="_self">tspnet.connect()</a></p><p class="relateditem"><a href="14076.htm" target="_self">tspnet.disconnect()</a></p><p class="relateditem"><a href="14077.htm" target="_self">tspnet.execute()</a></p><p class="relateditem"><a href="14078.htm" target="_self">tspnet.idn()</a></p><p class="relateditem"><a href="14079.htm" target="_self">tspnet.read()</a></p><p class="relateditem"><a href="14080.htm" target="_self">tspnet.readavailable()</a></p><p class="relateditem"><a href="14081.htm" target="_self">tspnet.reset()</a></p><p class="relateditem"><a href="34363.htm" target="_self">tspnet.termination()</a></p><p class="relateditem"><a href="14084.htm" target="_self">tspnet.timeout</a></p><p class="relateditem"><a href="14085.htm" target="_self">tspnet.tsp.abort()</a></p><p class="relateditem"><a href="14086.htm" target="_self">tspnet.tsp.abortonconnect</a></p><p class="relateditem"><a href="14090.htm" target="_self">tspnet.tsp.rbtablecopy()</a></p><p class="relateditem"><a href="32684.htm" target="_self">tspnet.tsp.runscript()</a></p><p class="relateditem"><a href="14089.htm" target="_self">tspnet.write()</a></p><p class="relateditem"><a href="14062.htm" target="_self">upgrade.previous()</a></p><p class="relateditem"><a href="14063.htm" target="_self">upgrade.unit()</a></p><p class="relateditem"><a href="13987.htm" target="_self">userstring.add()</a></p><p class="relateditem"><a href="13988.htm" target="_self">userstring.catalog()</a></p><p class="relateditem"><a href="13989.htm" target="_self">userstring.delete()</a></p><p class="relateditem"><a href="13990.htm" target="_self">userstring.get()</a></p><p class="relateditem"><a href="13986.htm" target="_self">waitcomplete()</a></p></td>
<td width= "227">
<p class="relatedheading">See Also</p><p class="relateditem"><a href="20819.htm" target="_self">Command reference</a></p><p class="relateditem"><a href="19536.htm" target="_self">TSP command programming notes</a></p><p class="relateditem"><a href="33214.htm" target="_self">Using the TSP command reference</a></p></td>
</tr>
</table>



<input id="topicId" type="hidden" value="19389" />
<input id="topicDescription" type="hidden" value="TSP commands" />
<input id="footer-modified" type="hidden" value="Last modified: 10/3/2017 7:20:14 AM" />
</body>
</html>
