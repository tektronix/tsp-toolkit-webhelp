<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title> Lua memory management </title>
<link rel="stylesheet" type="text/css" href="stylesheet.css" /> 
<script type="text/javascript">
        function isTOCLoaded() {
            //this function for loading the topic within the application if loaded by itself
            //i.e. open the topic .htm file or as search engines link
            var url = window.location.href;
            var baseUrl = url.substring(0, url.lastIndexOf("/") + 1);
            var topicFile = url.substring(url.lastIndexOf("/") + 1)
            var newUrl = baseUrl + "index.htm#" + topicFile;
            location.href = newUrl;
            return false;
        }
</script>
</head>
<body>
<table class="relatedtopics aboveheading" cellpadding="0" cellspacing="0" border="0">
<tr valign="top">
<td width= "18">
<p class="bodytext"><a href="2430.htm" target="_self"><img id="f125" src="4200a_lc_previous_button.png" class="linkedpngtemplate4200a-nocaption" alt="Previous Icon" height="23" width="74" vspace="0" hspace="0" align="bottom" border="0"></a></p></td>
<td width= "18">
<p class="bodytext"><a href="2431.htm" target="_self"><img id="f124" src="4200a_lc_next_button.png" class="linkedpngtemplate4200a-nocaption" alt="Next Icon" height="23" width="74" vspace="0" hspace="0" align="bottom" border="0"></a></p></td>
</tr>
</table>
<h6 id="t16503" class="heading6">Lua memory management</h6>
<p class="bodytext">Lua automatically manages memory, which means you do not have to allocate memory for new objects and free it when the objects are no longer needed. Lua occasionally runs a garbage collector to collect all objects that are no longer accessible from Lua. All objects in Lua are subject to automatic management, including tables, variables, functions, threads, and strings.</p>
<p class="bodytext">Lua uses two numbers to control its garbage-collection cycles. One number counts how many bytes of dynamic memory Lua is using; the other is a threshold. When the number of bytes crosses the threshold, Lua runs the garbage collector, which reclaims the memory of all inaccessible objects. The byte counter is adjusted, and the threshold is reset to twice the new value of the byte counter.</p>
<table class="relatedtopics belowtopictext" cellpadding="0" cellspacing="0" border="0">
<tr valign="top">
<td width= "227">
<p class="relatedheading">See Also</p><p class="relateditem"><a href="2430.htm" target="_self">Base library functions</a></p></td>
</tr>
</table>


<input id="topicId" type="hidden" value="16503" />
<input id="topicDescription" type="hidden" value="Lua memory management" />
<input id="footer-modified" type="hidden" value="Last modified: 10/10/2019 12:48:25 PM" />
</body>
</html>
